#pragma once
#include <glad/glad.h>
#include <GLFW/glfw3.h>
#include <glm/glm.hpp>
#include <glm/vec4.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>
#include "BlockTexture.h"
#include <vector>
#include<math.h>
class Model
{
public:
	Model();
	Model(int pointNum);
	~Model();
	void init(float texPos[]);
	void render();
	//void setPointNum()
	
private:
	unsigned int pointNum = 36;
	unsigned int VAO;
	unsigned int VBO;
	BlockTexture *texture = nullptr;
	float cubeVerPos[108] = {
		//前
		-0.5, -0.5, 0.5, //1
		-0.5, 0.5, 0.5, //2
		0.5, 0.5, 0.5, //3

		-0.5, -0.5, 0.5,  // 1
		0.5, 0.5, 0.5, // 3
		0.5, -0.5, 0.5, // 4
						//后
		-0.5, -0.5, -0.5, // 5
		-0.5, 0.5, -0.5, // 6
		0.5, 0.5, -0.5, // 7

		-0.5, -0.5, -0.5, // 5
		0.5, 0.5, -0.5, // 7
		0.5, -0.5, -0.5, // 8
		//左
		-0.5, -0.5, -0.5, // 5
		-0.5, 0.5, -0.5, // 6
		-0.5, 0.5, 0.5, // 2

		 -0.5, -0.5, -0.5, // 5
		-0.5, 0.5, 0.5, // 2
		-0.5, -0.5, 0.5,  // 1
		//右
		0.5, -0.5, 0.5, // 4
		0.5, 0.5, 0.5, // 3
		0.5, 0.5, -0.5, // 7

		0.5, -0.5, 0.5, // 4
		0.5, 0.5, -0.5, // 7
		0.5, -0.5, -0.5, // 8
		//上
		-0.5, 0.5, 0.5, // 2
		-0.5, 0.5, -0.5, // 6
		0.5, 0.5, -0.5, // 7

		-0.5, 0.5, 0.5, // 2
		0.5, 0.5, -0.5, // 7
		0.5, 0.5, 0.5, // 3
		//下
		-0.5, -0.5, 0.5,  // 1
		-0.5, -0.5, -0.5, // 5
		0.5, -0.5, -0.5, // 8

		-0.5, -0.5, 0.5,  // 1
		0.5, -0.5, -0.5, // 8
		0.5, -0.5, 0.5, // 4
	}; //顶点数组
	float cubeANormal[108] = {
		//前
		0.0f,  0.0f, -1.0f, //3
		0.0f,  0.0f, -1.0f, //2
		0.0f,  0.0f, -1.0f, //1  //first

		0.0f,  0.0f, -1.0f, //1 3 4
		0.0f,  0.0f, -1.0f,
		0.0f,  0.0f, -1.0f,
		//后
		0.0f,  0.0f, -1.0f, //5 6 7
		0.0f,  0.0f, -1.0f,
		0.0f,  0.0f, -1.0f,

		0.0f,  0.0f, -1.0f, //5 7 8
		0.0f,  0.0f, -1.0f,
		0.0f,  0.0f, -1.0f,

		1.0f,  0.0f, 0.0f,  //5 6 2
		1.0f,  0.0f, 0.0f,
		1.0f,  0.0f, 0.0f,

		1.0f,  0.0f, 0.0f,  //5  2 1
		1.0f,  0.0f, 0.0f,
		1.0f,  0.0f, 0.0f,

		1.0f,  0.0f, 0.0f,  //4 3 7
		1.0f,  0.0f, 0.0f,
		1.0f,  0.0f, 0.0f,

		1.0f,  0.0f, 0.0f,  //4 7 8
		1.0f,  0.0f, 0.0f,
		1.0f,  0.0f, 0.0f,

		0.0f,  -1.0f, 0.0f, //2 6 7
		0.0f,  -1.0f, 0.0f,
		0.0f,  -1.0f, 0.0f,

		0.0f,  -1.0f, 0.0f, //2 7 3
		0.0f,  -1.0f, 0.0f,
		0.0f,  -1.0f, 0.0f,

		0.0f,  -1.0f, 0.0f, //1 5 8
		0.0f,  -1.0f, 0.0f,
		0.0f,  -1.0f, 0.0f,

		0.0f,  -1.0f, 0.0f, //1 8 4
		0.0f,  -1.0f, 0.0f,
		0.0f,  -1.0f, 0.0f,

	};
	//	//前
	//	0.0f,  0.0f, 1.0f, //3
	//	0.0f,  0.0f, 1.0f, //2
	//	0.0f,  0.0f, 1.0f, //1 

	//	0.0f,  0.0f, 1.0f, //1 3 4
	//	0.0f,  0.0f, 1.0f,
	//	0.0f,  0.0f, 1.0f,
	//	//后
	//	0.0f,  0.0f, -1.0f, //5 6 7
	//	0.0f,  0.0f, -1.0f,
	//	0.0f,  0.0f, -1.0f,

	//	0.0f,  0.0f, -1.0f, //5 7 8
	//	0.0f,  0.0f, -1.0f,
	//	0.0f,  0.0f, -1.0f,

	//	1.0f,  0.0f, 0.0f,  //5 6 2
	//	1.0f,  0.0f, 0.0f,
	//	1.0f,  0.0f, 0.0f,

	//	1.0f,  0.0f, 0.0f,  //5  2 1
	//	1.0f,  0.0f, 0.0f,
	//	1.0f,  0.0f, 0.0f,

	//	-1.0f,  0.0f, 0.0f,  //4 3 7
	//	-1.0f,  0.0f, 0.0f,
	//	-1.0f,  0.0f, 0.0f,

	//	0.0f,  -1.0f, 0.0f,  //4 7 8
	//	-1.0f,  0.0f, 0.0f,
	//	-1.0f,  0.0f, 0.0f,

	//	0.0f,  -1.0f, 0.0f, //2 6 7
	//	0.0f,  -1.0f, 0.0f,
	//	0.0f,  -1.0f, 0.0f,

	//	0.0f,  -1.0f, 0.0f, //2 7 3
	//	0.0f,  -1.0f, 0.0f,
	//	0.0f,  -1.0f, 0.0f,

	//	0.0f,  -1.0f, 0.0f, //1 5 8
	//	0.0f,  -1.0f, 0.0f,
	//	0.0f,  -1.0f, 0.0f,

	//	0.0f,  -1.0f, 0.0f, //1 8 4
	//	0.0f,  -1.0f, 0.0f,
	//	0.0f,  -1.0f, 0.0f,

	//}; //顶点数组
	float cubeTexPos[72] = {};

	float crossVerPos[36] = {
		-0.5, -0.5, 0.5, //1
		-0.5, 0.5, 0.5, //2
		0.5, 0.5, -0.5, // 7

		-0.5, -0.5, 0.5, //1
		0.5, 0.5, -0.5, // 7
		0.5, -0.5, -0.5, // 8

		-0.5, -0.5, -0.5, // 5
		-0.5, 0.5, -0.5, // 6
		0.5, 0.5, 0.5, // 3

		-0.5, -0.5, -0.5, // 5
		0.5, 0.5, 0.5, // 3
		0.5, -0.5, 0.5, // 4
	};
	float crossVeraborm[36] = {
		//前
		(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),
		(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),
		(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),

		(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),
		(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),
		(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),

		-(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),
		-(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),
		-(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),

		-(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),
		-(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),
		-(sqrt(2.0f) / 2),  0.0f, (sqrt(2.0f) / 2),

	};
	float crossTexPos[24] = {};

	float waterVerPos[18] = {
		-0.5, 0.25, 0.5, // 2
		-0.5, 0.25, -0.5, // 6
		0.5, 0.25, -0.5, // 7

		-0.5, 0.25, 0.5, // 2
		0.5, 0.25, -0.5, // 7
		0.5, 0.25, 0.5, // 3
	};
	float waterVeraborm[18] = {
		0.0f,  -1.0f, 0.0f, //2 7 3
		0.0f,  -1.0f, 0.0f,
		0.0f,  -1.0f, 0.0f,
	};
	float waterTexPos[12] = {};
};

